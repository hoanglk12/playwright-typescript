version: 2.1

orbs:
  node: circleci/node@5.1.0
  windows: circleci/windows@5.0.0

parameters:
  environment:
    type: enum
    enum: ["testing", "staging", "production"]
    default: "testing"
  mode:
    type: enum
    enum: ["parallel", "serial"]
    default: "parallel"
  workers:
    type: string
    default: "4"
  browser:
    type: enum
    enum: ["all", "chromium", "firefox", "webkit"]
    default: "all"
  test_type:
    type: enum
    enum: ["both", "ui", "api"]
    default: "both"

executors:
  linux-executor:
    docker:
      - image: mcr.microsoft.com/playwright:v1.40.0-focal
    working_directory: ~/project
    environment:
      NODE_ENV: << pipeline.parameters.environment >>
      TEST_ENV: << pipeline.parameters.environment >>
      TEST_MODE: << pipeline.parameters.mode >>
      TEST_WORKERS: << pipeline.parameters.workers >>
      TEST_BROWSER: << pipeline.parameters.browser >>
      TEST_TYPE: << pipeline.parameters.test_type >>

  windows-executor:
    machine:
      image: windows-server-2019-vs2019:stable
    resource_class: windows.medium
    shell: cmd.exe
    working_directory: ~/project
    environment:
      NODE_ENV: << pipeline.parameters.environment >>
      TEST_ENV: << pipeline.parameters.environment >>
      TEST_MODE: << pipeline.parameters.mode >>
      TEST_WORKERS: << pipeline.parameters.workers >>
      TEST_BROWSER: << pipeline.parameters.browser >>
      TEST_TYPE: << pipeline.parameters.test_type >>

  macos-executor:
    macos:
      xcode: 15.0.0
    working_directory: ~/project
    environment:
      NODE_ENV: << pipeline.parameters.environment >>
      TEST_ENV: << pipeline.parameters.environment >>
      TEST_MODE: << pipeline.parameters.mode >>
      TEST_WORKERS: << pipeline.parameters.workers >>
      TEST_BROWSER: << pipeline.parameters.browser >>
      TEST_TYPE: << pipeline.parameters.test_type >>

commands:
  install-dependencies:
    steps:
      - checkout
      - node/install:
          node-version: '20'
      - restore_cache:
          keys:
            - v1-deps-{{ arch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          paths: [node_modules]
          key: v1-deps-{{ arch }}-{{ checksum "package-lock.json" }}

  install-dependencies-windows:
    steps:
      - checkout
      - run: choco install nodejs --version=20.10.0 -y
      - run: npm ci

  cache-playwright-browsers:
    steps:
      - restore_cache:
          keys:
            - v1-browsers-{{ arch }}-{{ checksum "package-lock.json" }}
      - run: npx playwright install --with-deps
      - save_cache:
          paths:
            - ~/.cache/ms-playwright
            - ~/Library/Caches/ms-playwright
          key: v1-browsers-{{ arch }}-{{ checksum "package-lock.json" }}

  make-scripts-executable:
    steps:
      - run: |
          chmod +x ./run-ui-tests.sh
          chmod +x ./run-api-tests-nonparallel.sh

jobs:
  ui-test-linux:
    executor: linux-executor
    steps:
      - install-dependencies
      - cache-playwright-browsers
      - make-scripts-executable
      - run:
          name: Run UI tests (Linux)
          command: ./run-ui-tests.sh $TEST_ENV $TEST_MODE $TEST_WORKERS
          environment:
            BROWSER: << pipeline.parameters.browser >>
          no_output_timeout: 45m
      - store_artifacts:
          path: test-results/
      - store_artifacts:
          path: playwright-report/
      - store_artifacts:
          path: screenshots/
      - store_artifacts:
          path: videos/
      - store_test_results:
          path: test-results/

  ui-test-windows:
    executor: windows-executor
    steps:
      - install-dependencies-windows
      - run: npx playwright install --with-deps
      - run:
          name: Run UI tests (Windows)
          command: ./run-ui-tests.bat %TEST_ENV% %TEST_MODE% %TEST_WORKERS%
          environment:
            BROWSER: << pipeline.parameters.browser >>
          no_output_timeout: 45m
      - store_artifacts:
          path: test-results/
      - store_artifacts:
          path: playwright-report/
      - store_artifacts:
          path: screenshots/
      - store_artifacts:
          path: videos/

  ui-test-macos:
    executor: macos-executor
    steps:
      - install-dependencies
      - cache-playwright-browsers
      - make-scripts-executable
      - run:
          name: Run UI tests (macOS)
          command: ./run-ui-tests.sh $TEST_ENV $TEST_MODE $TEST_WORKERS
          environment:
            BROWSER: << pipeline.parameters.browser >>
          no_output_timeout: 45m
      - store_artifacts:
          path: test-results/
      - store_artifacts:
          path: playwright-report/
      - store_artifacts:
          path: screenshots/
      - store_artifacts:
          path: videos/

  api-test:
    executor: linux-executor
    steps:
      - install-dependencies
      - make-scripts-executable
      - run:
          name: Run API tests
          command: ./run-api-tests-nonparallel.sh
          environment:
            API_ENV: << pipeline.parameters.environment >>
          no_output_timeout: 30m
      - store_artifacts:
          path: test-results/api/
      - store_artifacts:
          path: api-results/
      - store_artifacts:
          path: api-report/
      - store_artifacts:
          path: playwright-report/
      - store_test_results:
          path: test-results/api/

  test-report:
    executor: linux-executor
    steps:
      - checkout
      - run:
          name: Generate combined report
          command: |
            mkdir -p ./combined-report
            cat > ./combined-report/index.html \<< 'EOF'
            <!DOCTYPE html>
            <html>
            <head>
                <title>Playwright Test Results - CircleCI</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 20px; background-color: #f8f9fa; }
                    .header { background: #343a40; color: white; padding: 20px; border-radius: 5px; margin-bottom: 20px; }
                    .config { background: #e9ecef; padding: 15px; border-radius: 5px; margin: 20px 0; }
                    .results { background: #d4edda; padding: 15px; border-radius: 5px; margin: 20px 0; }
                    .artifacts { background: #cce5ff; padding: 15px; border-radius: 5px; margin: 20px 0; }
                    ul { margin: 10px 0; }
                    li { margin: 5px 0; }
                    .timestamp { font-style: italic; color: #6c757d; }
                </style>
            </head>
            <body>
                <div class="header">
                    <h1>ðŸŽ­ Playwright Test Results - CircleCI</h1>
                    <p class="timestamp">Generated on: $(date)</p>
                </div>
                
                <div class="config">
                    <h2>ðŸ“‹ Test Configuration</h2>
                    <ul>
                        <li><strong>Environment:</strong> << pipeline.parameters.environment >></li>
                        <li><strong>Mode:</strong> << pipeline.parameters.mode >></li>
                        <li><strong>Workers:</strong> << pipeline.parameters.workers >></li>
                        <li><strong>Browser:</strong> << pipeline.parameters.browser >></li>
                        <li><strong>Test Type:</strong> << pipeline.parameters.test_type >></li>
                        <li><strong>CI Platform:</strong> CircleCI</li>
                        <li><strong>Build:</strong> $CIRCLE_BUILD_NUM</li>
                        <li><strong>Branch:</strong> $CIRCLE_BRANCH</li>
                    </ul>
                </div>
                
                <div class="results">
                    <h2>âœ… Test Results</h2>
                    <p>UI and API tests completed successfully. Detailed results are available in the artifacts section.</p>
                    <ul>
                        <li>Cross-platform UI tests (Linux, Windows, macOS)</li>
                        <li>API tests with comprehensive coverage</li>
                        <li>Screenshots and videos for failed tests</li>
                        <li>HTML reports with detailed test information</li>
                        <li>JUnit XML format for CI integration</li>
                    </ul>
                </div>
                
                <div class="artifacts">
                    <h2>ðŸ“¦ Available Artifacts</h2>
                    <ul>
                        <li><strong>Test Results:</strong> JUnit XML format in test-results/ folder</li>
                        <li><strong>HTML Reports:</strong> Interactive reports in playwright-report/ folder</li>
                        <li><strong>Screenshots:</strong> Failure screenshots in screenshots/ folder</li>
                        <li><strong>Videos:</strong> Test execution videos in videos/ folder</li>
                        <li><strong>API Results:</strong> API-specific results in api-results/ folder</li>
                    </ul>
                    <p><strong>Retention:</strong> Artifacts are retained for 30 days</p>
                </div>
                
                <div class="config">
                    <h2>ðŸ”— Quick Links</h2>
                    <ul>
                        <li><a href="$CIRCLE_BUILD_URL" target="_blank">CircleCI Build Details</a></li>
                        <li><a href="$CIRCLE_BUILD_URL/artifacts" target="_blank">View All Artifacts</a></li>
                        <li><a href="https://github.com/hoanglk12/playwright-typescript" target="_blank">Source Repository</a></li>
                    </ul>
                </div>
            </body>
            </html>
            EOF
      - store_artifacts:
          path: ./combined-report/

  notify-results:
    executor: linux-executor
    steps:
      - run:
          name: Generate notification summary
          command: |
            echo "ðŸŽ­ Playwright Test Results Summary"
            echo "================================="
            echo "Environment: << pipeline.parameters.environment >>"
            echo "Mode: << pipeline.parameters.mode >>"
            echo "Workers: << pipeline.parameters.workers >>"
            echo "Browser: << pipeline.parameters.browser >>"
            echo "Test Type: << pipeline.parameters.test_type >>"
            echo "Pipeline URL: $CIRCLE_BUILD_URL"
            echo "Build Number: $CIRCLE_BUILD_NUM"
            echo "Branch: $CIRCLE_BRANCH"
            echo "Commit: $CIRCLE_SHA1"
            echo "================================="

workflows:
  version: 2
  playwright-tests:
    jobs:
      - ui-test-linux:
          filters:
            branches:
              only: [main, master, develop]
          context: playwright-testing

      - ui-test-windows:
          filters:
            branches:
              only: [main, master, develop]
          context: playwright-testing

      - ui-test-macos:
          filters:
            branches:
              only: [main, master, develop]
          context: playwright-testing

      - api-test:
          filters:
            branches:
              only: [main, master, develop]
          context: playwright-testing

      - test-report:
          requires:
            - ui-test-linux
            - ui-test-windows
            - ui-test-macos
            - api-test
          filters:
            branches:
              only: [main, master, develop]

      - notify-results:
          requires:
            - test-report
          filters:
            branches:
              only: [main, master, develop]

  nightly-tests:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: [main, master]
    jobs:
      - ui-test-linux:
          context: playwright-testing
      - ui-test-windows:
          context: playwright-testing
      - ui-test-macos:
          context: playwright-testing
      - api-test:
          context: playwright-testing
      - test-report:
          requires:
            - ui-test-linux
            - ui-test-windows
            - ui-test-macos
            - api-test
      - notify-results:
          requires:
            - test-report